#---*- Makefile -*-------------------------------------------------------

# Targets related to handling the schema files
PROPS := $(wildcard schemas/src/*/*/*/*/*.yaml)
PROPS_OUT = $(patsubst schemas/src/%.yaml,schemas/output/%.json,$(PROPS))

ENDPOINTS := $(wildcard schemas/src/*/*/*/*.yaml)
ENDPOINTS_OUT = $(patsubst schemas/src/%.yaml,schemas/output/%.json,$(ENDPOINTS))

NAMESPACES := $(wildcard schemas/src/*/*/*.yaml)
NAMESPACES_OUT = $(patsubst schemas/src/%.yaml,schemas/output/%.json,$(NAMESPACES))

OPTIMADE_VERSION := $(shell awk 'NR==2 && /OPTIMADE API specification/ { sub(/~develop/, "", $$NF); print $$NF; exit }' optimade.rst)
ifeq ($(OPTIMADE_VERSION),)
  OPTIMADE_VERSION_SUBST=
else
  OPTIMADE_VERSION_SUBST=--sub "{OPTIMADE_VERSION}" "$(OPTIMADE_VERSION)"
endif

.PHONY: schemas schemas_symlinks

schemas: schemas_symlinks $(PROPS_OUT) $(ENDPOINTS_OUT) $(NAMESPACES_OUT)

schemas_symlinks:
	mkdir -p schemas/output/properties
	mkdir -p schemas/output/units
	mkdir -p schemas/output/constants
	mkdir -p schemas/output/types
	mkdir -p schemas/output/standards
	mkdir -p schemas/output/schemas
	for KIND in properties units constants types standards schemas; do \
	  ( cd "schemas/src/$$KIND";\
	  for dir in *; do \
	    if [ -h "$$dir" -a ! -h "../../output/$$KIND/$$dir" ]; then \
	      ln -s "$$(readlink "$$dir")" "../../output/$$KIND/$$dir" ;\
	    fi ;\
	  done \
	  ) \
	done

$(ENDPOINTS_OUT): $(PROPS_OUT)
$(NAMESPACES_OUT): $(ENDPOINTS_OUT)
$(FULL_SCHEMAS_OUT): $(NAMESPACES_OUT)

schemas/output/%.json: schemas/src/%.yaml | schemas_symlinks
	mkdir -p "$(dir $@)"
	tests/scripts/process_propdefs.py --remove-null --refs-mode insert $(OPTIMADE_VERSION_SUBST) --basedir "schemas/src" --baseid="https://schemas.optimade.org/" --output "$@" "$<"

.PHONY: clean clean_schemas

clean: clean_schemas

clean_schemas:
	rm -rf schemas/output

.PHONY: check_schemas_variables

check_schemas_variables:
	@echo "PROPS = $(PROPS)"
	@echo "PROPS_OUT = $(PROPS_OUT)"
	@echo ""
	@echo "ENDPOINTS = $(ENDPOINTS)"
	@echo "ENDPOINTS_OUT = $(ENDPOINTS_OUT)"
	@echo ""
	@echo "NAMESPACES = $(NAMESPACES)"
	@echo "NAMESPACES_OUT = $(NAMESPACES_OUT)"
	@echo ""
	@echo "OPTIMADE_VERSION = $(OPTIMADE_VERSION)"
	@echo "OPTIMADE_VERSION_SUBST = $(OPTIMADE_VERSION_SUBST)"


.PHONY: validate_schemas

validate_schemas: schemas
	tests/scripts/validate_json_schema.py schemas/tests/example-structures.optimade schemas/output/schemas/current/json-schema/optimade.json
