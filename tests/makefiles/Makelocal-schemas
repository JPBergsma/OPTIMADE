#---*- Makefile -*-------------------------------------------------------

# Targets related to handling the schema files
SCHEMAS_LVL3 := $(wildcard schemas/src/*/*/*.yaml)
SCHEMAS_LVL3_OUT = $(patsubst schemas/src/%.yaml,schemas/output/%.json,$(SCHEMAS_LVL3))

SCHEMAS_LVL2 := $(wildcard schemas/src/*/*/*/*.yaml)
SCHEMAS_LVL2_OUT = $(patsubst schemas/src/%.yaml,schemas/output/%.json,$(SCHEMAS_LVL2))

SCHEMAS_LVL1 := $(wildcard schemas/src/*/*/*/*/*.yaml)
SCHEMAS_LVL1_OUT = $(patsubst schemas/src/%.yaml,schemas/output/%.json,$(SCHEMAS_LVL1))

STANDARDS := $(wildcard schemas/src/standards/*/*.yaml)
STANDARDS_MD_OUT = $(patsubst schemas/src/%.yaml,schemas/output/%.md,$(STANDARDS))

OPTIMADE_VERSION := $(shell awk 'NR==2 && /OPTIMADE API specification/ { sub(/~develop/, "", $$NF); print $$NF; exit }' optimade.rst)
ifeq ($(OPTIMADE_VERSION),)
  OPTIMADE_VERSION_SUBST=
else
  OPTIMADE_VERSION_SUBST=--sub "{OPTIMADE_VERSION}" "$(OPTIMADE_VERSION)"
endif

.PHONY: schemas schemas_vers_symlinks

schemas: schemas_vers_symlinks $(SCHEMAS_LVL1_OUT) $(SCHEMAS_LVL2_OUT) $(SCHEMAS_LVL3_OUT)
# $(STANDARDS_MD_OUT)

schemas_vers_symlinks:
	cd schemas/src; \
	for KIND in *; do \
          mkdir -p ../output/$$KIND; \
	  ( cd "$$KIND";\
	  for dir in *; do \
	    if [ -h "$$dir" -a ! -h "../../output/$$KIND/$$dir" ]; then \
	      ln -s "$$(readlink "$$dir")" "../../output/$$KIND/$$dir" ;\
	    fi ;\
	  done \
	  ) \
	done

schemas/output/%.json: schemas/src/%.yaml | schemas_vers_symlinks
	mkdir -p "$(dir $@)"
	tests/scripts/process_propdefs.py --remove-null --refs-mode insert $(OPTIMADE_VERSION_SUBST) --basedir "schemas/src" --baseid="https://schemas.optimade.org/" --output "$@" "$<"

schemas/output/%.md: schemas/src/%.yaml | schemas_vers_symlinks
	mkdir -p "$(dir $@)"
	tests/scripts/process_propdefs.py -f md --remove-null --refs-mode insert $(OPTIMADE_VERSION_SUBST) --basedir "schemas/src" --baseid="https://schemas.optimade.org/" --output "$@" "$<"

.PHONY: clean clean_schemas

clean: clean_schemas

clean_schemas:
	rm -rf schemas/output

.PHONY: check_schemas_variables

check_schemas_variables:
	@echo "SCHEMAS_LVL1 = $(SCHEMAS_LVL1)"
	@echo "SCHEMAS_LVL1_OUT = $(SCHEMAS_LVL1_OUT)"
	@echo ""
	@echo "SCHEMAS_LVL2 = $(SCHEMAS_LVL2)"
	@echo "SCHEMAS_LVL2_OUT = $(SCHEMAS_LVL2_OUT)"
	@echo ""
	@echo "SCHEMAS_LVL3 = $(SCHEMAS_LVL3)"
	@echo "SCHEMAS_LVL3_OUT = $(SCHEMAS_LVL3_OUT)"
	@echo ""
	@echo "STANDARDS = $(STANDARDS)"
	@echo "STANDARDS_MD_OUT = $(STANDARDS_MD_OUT)"
	@echo ""
	@echo "OPTIMADE_VERSION = $(OPTIMADE_VERSION)"
	@echo "OPTIMADE_VERSION_SUBST = $(OPTIMADE_VERSION_SUBST)"


.PHONY: validate_schemas

validate_schemas: schemas
	tests/scripts/validate_json_schema.py schemas/tests/example-structures.optimade schemas/output/schemas/current/json-schema/optimade.json
